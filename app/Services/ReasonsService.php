<?php

namespace App\Services;


class ReasonsService
{

    /**
     * ___ Вот функция PHP, которая находит минимальное пропущенное число
     * ___ в последовательности уникальных целых чисел от 1 до n, при условии,
     * ___ что из исходной последовательности были удалены некоторые числа
     * @param array $numbers
     * @return int|null
     */
    public static function findMinMissingNumber(array $numbers): ?int
    {
        // Если массив пуст, и мы ожидаем числа от 1, то 1 - минимальное пропущенное.
        if (empty($numbers)) {
            return 1;
        }

        // 1. Сортируем массив по возрастанию.
        // Это критически важно для эффективной проверки последовательности.
        sort($numbers);

        // 2. Проверяем, отсутствует ли число '1'.
        // Если первый элемент не равен 1, то 1 - минимальное пропущенное число.
        if ($numbers[0] !== 1) {
            return 1;
        }

        // 3. Итерируем по отсортированному массиву, чтобы найти первый пробел.
        // Мы ожидаем, что каждое число будет ровно на единицу больше предыдущего.
        // Цикл начинается со второго элемента (индекс 1).
        for ($i = 1; $i < count($numbers); $i++) {
            // Если текущее число не равно предыдущему числу + 1,
            // то пропущенное число - это (предыдущее число + 1).
            if ($numbers[$i] !== $numbers[$i - 1] + 1) {
                return $numbers[$i - 1] + 1;
            }
        }

        // 4. Если пробелов не найдено, то минимальное пропущенное число - это n + 1.
        // Это происходит, если массив содержит все числа от 1 до своего максимального элемента.
        // В этом случае наименьшее пропущенное число будет следующим целым числом после наибольшего в массиве.
        return end($numbers) + 1;
    }
}
